{
    "hexagonal_intro_1": {"texto":"Hexagonal architecture focuses on layer independence.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ ˈfoʊkəsɪz ɑn ˈleɪɚɹ ˌɪndɪˈpɛndəns"},
    "hexagonal_intro_2": {"texto":"It's also known as ports and adapters architecture.","fonetica":"ɪts ˈɔlsoʊ noʊn æz pɔɹts ænd əˈdæptɚz ˈɑɹkɪtɛkʧɚ"},
    "hexagonal_intro_3": {"texto":"Its goal is to isolate the core domain from external details.","fonetica":"ɪts ɡoʊl ɪz tə ˈaɪsəleɪt ðə kɔɹ doʊˈmeɪn fɹəm ɪkˈstɝnəl ˈditeɪlz"},
    "hexagonal_intro_4": {"texto":"The domain represents pure business rules.","fonetica":"ðə doʊˈmeɪn ˌɹɛprɪˈzɛnts pjʊɹ ˈbɪznəs ɹulz"},
    "hexagonal_intro_5": {"texto":"Adapters connect the domain with the outside world.","fonetica":"əˈdæptɚz kəˈnɛkt ðə doʊˈmeɪn wɪð ði ˈaʊtˌsaɪd wɝld"},
    "hexagonal_intro_6": {"texto":"A port defines an interface for communication.","fonetica":"ə pɔɹt dɪˈfaɪnz ən ˈɪntɚfeɪs fɔɹ kəˌmjunɪˈkeɪʃən"},
    "hexagonal_intro_7": {"texto":"Ports abstract external interactions.","fonetica":"pɔɹts ˈæbstɹækt ɪkˈstɝnəl ˌɪntɚˈækʃənz"},
    "hexagonal_intro_8": {"texto":"Adapters implement the actual communication.","fonetica":"əˈdæptɚz ˈɪmplɪmɛnt ði ˈækʧuəl kəˌmjunɪˈkeɪʃən"},
    "hexagonal_intro_9": {"texto":"The aim is for the domain not to depend on infrastructure.","fonetica":"ðə eɪm ɪz fɔɹ ðə doʊˈmeɪn nɑt tə dɪˈpɛnd ɑn ˈɪnfɹəˌstɹʌkʧɚ"},
    "hexagonal_intro_10": {"texto":"The domain remains stable even when technology changes.","fonetica":"ðə doʊˈmeɪn ɹɪˈmeɪnz ˈsteɪbəl ˈivən wɛn tɛkˈnɑləʤi ˈʧeɪnʤɪz"},
    "hexagonal_intro_11": {"texto":"The business core is the heart of the system.","fonetica":"ðə ˈbɪznəs kɔɹ ɪz ðə hɑɹt əv ðə ˈsɪstəm"},
    "hexagonal_intro_12": {"texto":"Hexagonal architecture improves maintainability.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ ɪmˈpɹuvz ˌmeɪntənəˈbɪlɪti"},
    "hexagonal_intro_13": {"texto":"It facilitates unit testing of the domain.","fonetica":"ɪt fəˈsɪləteɪts ˈjunɪt ˈtɛstɪŋ əv ðə doʊˈmeɪn"},
    "hexagonal_intro_14": {"texto":"It reduces coupling with frameworks and libraries.","fonetica":"ɪt ɹɪˈdusɪz ˈkʌplɪŋ wɪð ˈfɹeɪmwɝks ænd ˈlaɪbɹɛɹiz"},
    "hexagonal_intro_15": {"texto":"It allows replacing databases without affecting the domain.","fonetica":"ɪt əˈlaʊz ɹiˈpleɪsɪŋ ˈdeɪtəˌbeɪsɪz wɪˈθaʊt əˈfɛktɪŋ ðə doʊˈmeɪn"},
    "hexagonal_intro_16": {"texto":"Infrastructure details are secondary.","fonetica":"ˈɪnfɹəˌstɹʌkʧɚ ˈditeɪlz ɑɹ ˈsɛkənˌdɛɹi"},
    "hexagonal_intro_17": {"texto":"The hexagonal model promotes modularity.","fonetica":"ðə hɛkˈsæɡənəl ˈmɑdəl pɹəˈmoʊts ˌmɑʤəˈlæɹɪti"},
    "hexagonal_intro_18": {"texto":"It clearly separates responsibilities.","fonetica":"ɪt ˈklɪɹli ˈsɛpəɹeɪts ɹɪˌspɑnsəˈbɪlɪtiz"},
    "hexagonal_intro_19": {"texto":"The core doesn't know input or output details.","fonetica":"ðə kɔɹ ˈdʌzənt noʊ ˈɪnˌpʊt ɔɹ ˈaʊtˌpʊt ˈditeɪlz"},
    "hexagonal_intro_20": {"texto":"Ports define how the domain communicates.","fonetica":"pɔɹts dɪˈfaɪn haʊ ðə doʊˈmeɪn kəˈmjunɪkeɪts"},
    "hexagonal_intro_21": {"texto":"Adapters implement the infrastructure.","fonetica":"əˈdæptɚz ˈɪmplɪmɛnt ðə ˈɪnfɹəˌstɹʌkʧɚ"},
    "hexagonal_intro_22": {"texto":"Technology independence is a key benefit.","fonetica":"tɛkˈnɑləʤi ˌɪndɪˈpɛndəns ɪz ə ki ˈbɛnəfɪt"},
    "hexagonal_intro_23": {"texto":"The domain can evolve without external constraints.","fonetica":"ðə doʊˈmeɪn kæn ɪˈvɑlv wɪˈθaʊt ɪkˈstɝnəl kənˈstɹeɪnts"},
    "hexagonal_intro_24": {"texto":"It encourages component reuse.","fonetica":"ɪt ɪnˈkɝɪʤɪz kəmˈpoʊnənt ɹiˈjus"},
    "hexagonal_intro_25": {"texto":"Hexagonal architecture facilitates testing.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ fəˈsɪləteɪts ˈtɛstɪŋ"},
    "hexagonal_intro_26": {"texto":"Use cases can be tested without real infrastructure.","fonetica":"juz ˈkeɪsɪz kæn bi ˈtɛstɪd wɪˈθaʊt ˈɹiəl ˈɪnfɹəˌstɹʌkʧɚ"},
    "hexagonal_intro_27": {"texto":"It's a domain-centric style.","fonetica":"ɪts ə doʊˈmeɪn-ˈsɛntɹɪk staɪl"},
    "hexagonal_intro_28": {"texto":"The core should be pure with no external dependencies.","fonetica":"ðə kɔɹ ʃʊd bi pjʊɹ wɪð noʊ ɪkˈstɝnəl dɪˈpɛndənsiz"},
    "hexagonal_intro_29": {"texto":"Adapters can be easily replaced.","fonetica":"əˈdæptɚz kæn bi ˈizəli ɹiˈpleɪst"},
    "hexagonal_intro_30": {"texto":"Hexagonal architecture promotes flexibility.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ pɹəˈmoʊts ˌflɛksəˈbɪlɪti"},
    "hexagonal_puertos_31": {"texto":"An input port defines how requests are received.","fonetica":"ən ˈɪnˌpʊt pɔɹt dɪˈfaɪnz haʊ ɹɪˈkwɛsts ɑɹ ɹɪˈsivd"},
    "hexagonal_puertos_32": {"texto":"An output port defines how responses are sent.","fonetica":"ən ˈaʊtˌpʊt pɔɹt dɪˈfaɪnz haʊ ɹɪˈspɑnsɪz ɑɹ sɛnt"},
    "hexagonal_puertos_33": {"texto":"Ports enable independence from external interfaces.","fonetica":"pɔɹts ɪˈneɪbəl ˌɪndɪˈpɛndəns fɹəm ɪkˈstɝnəl ˈɪntɚfeɪsɪz"},
    "hexagonal_puertos_34": {"texto":"Each port represents a communication contract.","fonetica":"iʧ pɔɹt ˌɹɛprɪˈzɛnts ə kəˌmjunɪˈkeɪʃən ˈkɑntɹækt"},
    "hexagonal_puertos_35": {"texto":"Adapters implement those contracts.","fonetica":"əˈdæptɚz ˈɪmplɪmɛnt ðoʊz ˈkɑntɹækts"},
    "hexagonal_puertos_36": {"texto":"An input adapter translates external requests.","fonetica":"ən ˈɪnˌpʊt əˈdæptɚ ˈtɹænzleɪts ɪkˈstɝnəl ɹɪˈkwɛsts"},
    "hexagonal_puertos_37": {"texto":"An output adapter translates domain responses.","fonetica":"ən ˈaʊtˌpʊt əˈdæptɚ ˈtɹænzleɪts doʊˈmeɪn ɹɪˈspɑnsɪz"},
    "hexagonal_puertos_38": {"texto":"Adapters are replaceable without touching the core.","fonetica":"əˈdæptɚz ɑɹ ɹiˈpleɪsəbəl wɪˈθaʊt ˈtʌʧɪŋ ðə kɔɹ"},
    "hexagonal_puertos_39": {"texto":"Ports prevent rigid dependencies.","fonetica":"pɔɹts pɹɪˈvɛnt ˈɹɪʤɪd dɪˈpɛndənsiz"},
    "hexagonal_puertos_40": {"texto":"The core doesn't know the concrete implementation.","fonetica":"ðə kɔɹ ˈdʌzənt noʊ ðə ˈkɑnkɹit ˌɪmplɪmɛnˈteɪʃən"},
    "hexagonal_puertos_41": {"texto":"Adapters connect to databases, APIs, or interfaces.","fonetica":"əˈdæptɚz kəˈnɛkt tu ˈdeɪtəˌbeɪsɪz ˈeɪˈpiˈaɪz ɔɹ ˈɪntɚfeɪsɪz"},
    "hexagonal_puertos_42": {"texto":"The port defines what's needed, not how it's done.","fonetica":"ðə pɔɹt dɪˈfaɪnz ˈwɑts ˈnidɪd nɑt haʊ ɪts dʌn"},
    "hexagonal_puertos_43": {"texto":"The adapter defines how to achieve communication.","fonetica":"ðə əˈdæptɚ dɪˈfaɪnz haʊ tə əˈʧiv kəˌmjunɪˈkeɪʃən"},
    "hexagonal_puertos_44": {"texto":"Ports act as connection points.","fonetica":"pɔɹts ækt æz kəˈnɛkʃən pɔɪnts"},
    "hexagonal_puertos_45": {"texto":"Adapters are specific to the technology used.","fonetica":"əˈdæptɚz ɑɹ spəˈsɪfɪk tə ðə tɛkˈnɑləʤi juzd"},
    "hexagonal_puertos_46": {"texto":"A port can have multiple adapters.","fonetica":"ə pɔɹt kæn hæv ˈmʌltəpəl əˈdæptɚz"},
    "hexagonal_puertos_47": {"texto":"This allows supporting different technologies simultaneously.","fonetica":"ðɪs əˈlaʊz səˈpɔɹtɪŋ ˈdɪfɚənt tɛkˈnɑləʤiz ˌsaɪməlˈteɪniəsli"},
    "hexagonal_puertos_48": {"texto":"The domain isn't aware of which adapter is used.","fonetica":"ðə doʊˈmeɪn ˈɪzənt əˈwɛɹ əv wɪʧ əˈdæptɚ ɪz juzd"},
    "hexagonal_puertos_49": {"texto":"Ports define the domain boundary.","fonetica":"pɔɹts dɪˈfaɪn ðə doʊˈmeɪn ˈbaʊndɚɹi"},
    "hexagonal_puertos_50": {"texto":"Adapters are replaceable to evolve the system.","fonetica":"əˈdæptɚz ɑɹ ɹiˈpleɪsəbəl tə ɪˈvɑlv ðə ˈsɪstəm"},
    "hexagonal_puertos_51": {"texto":"Ports facilitate testing without real infrastructure.","fonetica":"pɔɹts fəˈsɪləteɪt ˈtɛstɪŋ wɪˈθaʊt ˈɹiəl ˈɪnfɹəˌstɹʌkʧɚ"},
    "hexagonal_puertos_52": {"texto":"Adapters simulate infrastructure during testing.","fonetica":"əˈdæptɚz ˈsɪmjəleɪt ˈɪnfɹəˌstɹʌkʧɚ ˈdʊɹɪŋ ˈtɛstɪŋ"},
    "hexagonal_puertos_53": {"texto":"An input port could be a REST API.","fonetica":"ən ˈɪnˌpʊt pɔɹt kʊd bi ə ɹɛst ˈeɪ ˈpi ˈaɪ"},
    "hexagonal_puertos_54": {"texto":"An output adapter could be a data repository.","fonetica":"ən ˈaʊtˌpʊt əˈdæptɚ kʊd bi ə ˈdeɪtə ɹɪˈpɑzɪˌtɔɹi"},
    "hexagonal_puertos_55": {"texto":"Ports keep the domain decoupled.","fonetica":"pɔɹts kip ðə doʊˈmeɪn diˈkʌpəld"},
    "hexagonal_puertos_56": {"texto":"Adapters allow connecting with users or external systems.","fonetica":"əˈdæptɚz əˈlaʊ kəˈnɛktɪŋ wɪð ˈjuzɚz ɔɹ ɪkˈstɝnəl ˈsɪstəmz"},
    "hexagonal_puertos_57": {"texto":"A port exposes use cases to external clients.","fonetica":"ə pɔɹt ɪkˈspoʊzɪz juz ˈkeɪsɪz tə ɪkˈstɝnəl ˈklaɪənts"},
    "hexagonal_puertos_58": {"texto":"An adapter implements logic for a specific client.","fonetica":"ən əˈdæptɚ ˈɪmplɪmɛnts ˈlɑʤɪk fɔɹ ə spəˈsɪfɪk ˈklaɪənt"},
    "hexagonal_puertos_59": {"texto":"Ports establish clear responsibility boundaries.","fonetica":"pɔɹts ɪˈstæblɪʃ klɪɹ ɹɪˌspɑnsəˈbɪlɪti ˈbaʊndɚɹiz"},
    "hexagonal_puertos_60": {"texto":"Adapters simplify technology replacement.","fonetica":"əˈdæptɚz ˈsɪmplɪfaɪ tɛkˈnɑləʤi ɹiˈpleɪsmənt"},
    "hexagonal_casos_61": {"texto":"Use cases represent domain actions.","fonetica":"juz ˈkeɪsɪz ˌɹɛprɪˈzɛnt doʊˈmeɪn ˈækʃənz"},
    "hexagonal_casos_62": {"texto":"Each use case is independent of infrastructure.","fonetica":"iʧ juz keɪs ɪz ˌɪndɪˈpɛndənt əv ˈɪnfɹəˌstɹʌkʧɚ"},
    "hexagonal_casos_63": {"texto":"A use case defines a business workflow.","fonetica":"ə juz keɪs dɪˈfaɪnz ə ˈbɪznəs ˈwɝkfloʊ"},
    "hexagonal_casos_64": {"texto":"Use cases are orchestrated by the core.","fonetica":"juz ˈkeɪsɪz ɑɹ ˈɔɹkɪstɹeɪtɪd baɪ ðə kɔɹ"},
    "hexagonal_casos_65": {"texto":"The domain executes rules regardless of environment.","fonetica":"ðə doʊˈmeɪn ˈɛksɪkjuts ɹulz ɹɪˈɡɑɹdləs əv ɪnˈvaɪɹənmənt"},
    "hexagonal_casos_66": {"texto":"Adapters call the use cases.","fonetica":"əˈdæptɚz kɔl ðə juz ˈkeɪsɪz"},
    "hexagonal_casos_67": {"texto":"A port exposes use cases to the application.","fonetica":"ə pɔɹt ɪkˈspoʊzɪz juz ˈkeɪsɪz tə ði ˌæplɪˈkeɪʃən"},
    "hexagonal_casos_68": {"texto":"Use cases shouldn't know external details.","fonetica":"juz ˈkeɪsɪz ˈʃʊdənt noʊ ɪkˈstɝnəl ˈditeɪlz"},
    "hexagonal_casos_69": {"texto":"Use cases coordinate entities and services.","fonetica":"juz ˈkeɪsɪz koʊˈɔɹdɪneɪt ˈɛntɪtiz ænd ˈsɝvɪsɪz"},
    "hexagonal_casos_70": {"texto":"The design focuses on business logic.","fonetica":"ðə dɪˈzaɪn ˈfoʊkəsɪz ɑn ˈbɪznəs ˈlɑʤɪk"},
    "hexagonal_casos_71": {"texto":"Use cases are easily tested without dependencies.","fonetica":"juz ˈkeɪsɪz ɑɹ ˈizəli ˈtɛstɪd wɪˈθaʊt dɪˈpɛndənsiz"},
    "hexagonal_casos_72": {"texto":"A use case describes how actors interact.","fonetica":"ə juz keɪs dɪˈskɹaɪbz haʊ ˈæktɚz ˌɪntɚˈækt"},
    "hexagonal_casos_73": {"texto":"External actors only know ports, not the core.","fonetica":"ɪkˈstɝnəl ˈæktɚz ˈoʊnli noʊ pɔɹts nɑt ðə kɔɹ"},
    "hexagonal_casos_74": {"texto":"Use cases coordinate logic without direct dependencies.","fonetica":"juz ˈkeɪsɪz koʊˈɔɹdɪneɪt ˈlɑʤɪk wɪˈθaʊt dɪˈɹɛkt dɪˈpɛndənsiz"},
    "hexagonal_casos_75": {"texto":"The core manages pure business rules.","fonetica":"ðə kɔɹ ˈmænɪʤɪz pjʊɹ ˈbɪznəs ɹulz"},
    "hexagonal_casos_76": {"texto":"Use cases are reusable in different environments.","fonetica":"juz ˈkeɪsɪz ɑɹ ɹiˈjuzəbəl ɪn ˈdɪfɚənt ɪnˈvaɪɹənmənts"},
    "hexagonal_casos_77": {"texto":"An adapter activates a specific use case.","fonetica":"ən əˈdæptɚ ˈæktɪveɪts ə spəˈsɪfɪk juz keɪs"},
    "hexagonal_casos_78": {"texto":"Use cases guarantee separation of responsibilities.","fonetica":"juz ˈkeɪsɪz ˌɡɛɹənˈti ˌsɛpəˈɹeɪʃən əv ɹɪˌspɑnsəˈbɪlɪtiz"},
    "hexagonal_casos_79": {"texto":"The core shouldn't depend on external libraries.","fonetica":"ðə kɔɹ ˈʃʊdənt dɪˈpɛnd ɑn ɪkˈstɝnəl ˈlaɪbɹɛɹiz"},
    "hexagonal_casos_80": {"texto":"Use cases remain stable even when technology changes.","fonetica":"juz ˈkeɪsɪz ɹɪˈmeɪn ˈsteɪbəl ˈivən wɛn tɛkˈnɑləʤi ˈʧeɪnʤɪz"},
    "hexagonal_casos_81": {"texto":"Use cases express business intent.","fonetica":"juz ˈkeɪsɪz ɪkˈspɹɛs ˈbɪznəs ɪnˈtɛnt"},
    "hexagonal_casos_82": {"texto":"The domain stays protected from external changes.","fonetica":"ðə doʊˈmeɪn steɪz pɹəˈtɛktɪd fɹəm ɪkˈstɝnəl ˈʧeɪnʤɪz"},
    "hexagonal_casos_83": {"texto":"Use cases can be called from different interfaces.","fonetica":"juz ˈkeɪsɪz kæn bi kɔld fɹəm ˈdɪfɚənt ˈɪntɚfeɪsɪz"},
    "hexagonal_casos_84": {"texto":"Use cases are independent of storage.","fonetica":"juz ˈkeɪsɪz ɑɹ ˌɪndɪˈpɛndənt əv ˈstɔɹɪʤ"},
    "hexagonal_casos_85": {"texto":"A use case solves a specific business problem.","fonetica":"ə juz keɪs sɑlvz ə spəˈsɪfɪk ˈbɪznəs ˈpɹɑbləm"},
    "hexagonal_casos_86": {"texto":"The core remains stable even if the database is replaced.","fonetica":"ðə kɔɹ ɹɪˈmeɪnz ˈsteɪbəl ˈivən ɪf ðə ˈdeɪtəˌbeɪs ɪz ɹiˈpleɪst"},
    "hexagonal_casos_87": {"texto":"Use cases are easily tested using mocks.","fonetica":"juz ˈkeɪsɪz ɑɹ ˈizəli ˈtɛstɪd ˈjuzɪŋ mɑks"},
    "hexagonal_casos_88": {"texto":"Each use case should have a clear intent.","fonetica":"iʧ juz keɪs ʃʊd hæv ə klɪɹ ɪnˈtɛnt"},
    "hexagonal_casos_89": {"texto":"Use cases protect the core logic.","fonetica":"juz ˈkeɪsɪz pɹəˈtɛkt ðə kɔɹ ˈlɑʤɪk"},
    "hexagonal_casos_90": {"texto":"The core orchestrates use cases coherently.","fonetica":"ðə kɔɹ ˈɔɹkɪstɹeɪts juz ˈkeɪsɪz koʊˈhɪɹəntli"},
    "hexagonal_avanzado_91": {"texto":"Hexagonal architecture facilitates framework changes.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ fəˈsɪləteɪts ˈfɹeɪmwɝk ˈʧeɪnʤɪz"},
    "hexagonal_avanzado_92": {"texto":"Use cases can adapt to different environments.","fonetica":"juz ˈkeɪsɪz kæn əˈdæpt tə ˈdɪfɚənt ɪnˈvaɪɹənmənts"},
    "hexagonal_avanzado_93": {"texto":"Layer separation reduces complexity.","fonetica":"ˈleɪɚɹ ˌsɛpəˈɹeɪʃən ɹɪˈdusɪz kəmˈplɛksɪti"},
    "hexagonal_avanzado_94": {"texto":"The core doesn't depend on third-party frameworks.","fonetica":"ðə kɔɹ ˈdʌzənt dɪˈpɛnd ɑn ˈθɝdˈpɑɹti ˈfɹeɪmwɝks"},
    "hexagonal_avanzado_95": {"texto":"Adapters handle data persistence.","fonetica":"əˈdæptɚz ˈhændəl ˈdeɪtə pɚˈsɪstəns"},
    "hexagonal_avanzado_96": {"texto":"The domain is unaware of the database used.","fonetica":"ðə doʊˈmeɪn ɪz ənəˈwɛɹ əv ðə ˈdeɪtəˌbeɪs juzd"},
    "hexagonal_avanzado_97": {"texto":"Business rules can be tested without external services.","fonetica":"ˈbɪznəs ɹulz kæn bi ˈtɛstɪd wɪˈθaʊt ɪkˈstɝnəl ˈsɝvɪsɪz"},
    "hexagonal_avanzado_98": {"texto":"Ports define clear contracts for the domain.","fonetica":"pɔɹts dɪˈfaɪn klɪɹ ˈkɑntɹækts fɔɹ ðə doʊˈmeɪn"},
    "hexagonal_avanzado_99": {"texto":"Adapters implement actual communication with systems.","fonetica":"əˈdæptɚz ˈɪmplɪmɛnt ˈækʧuəl kəˌmjunɪˈkeɪʃən wɪð ˈsɪstəmz"},
    "hexagonal_avanzado_100": {"texto":"Hexagonal architecture improves scalability.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ ɪmˈpɹuvz ˌskeɪləˈbɪlɪti"},
    "hexagonal_avanzado_101": {"texto":"The core focuses on pure business rules.","fonetica":"ðə kɔɹ ˈfoʊkəsɪz ɑn pjʊɹ ˈbɪznəs ɹulz"},
    "hexagonal_avanzado_102": {"texto":"External details are easily replaceable.","fonetica":"ɪkˈstɝnəl ˈditeɪlz ɑɹ ˈizəli ɹiˈpleɪsəbəl"},
    "hexagonal_avanzado_103": {"texto":"The domain isn't affected by technological changes.","fonetica":"ðə doʊˈmeɪn ˈɪzənt əˈfɛktɪd baɪ ˌtɛknəˈlɑʤɪkəl ˈʧeɪnʤɪz"},
    "hexagonal_avanzado_104": {"texto":"Ports allow integrating new interfaces.","fonetica":"pɔɹts əˈlaʊ ˈɪntɪˌɡɹeɪtɪŋ nu ˈɪntɚfeɪsɪz"},
    "hexagonal_avanzado_105": {"texto":"An adapter can connect to different APIs.","fonetica":"ən əˈdæptɚ kæn kəˈnɛkt tə ˈdɪfɚənt ˈeɪˈpiˈaɪz"},
    "hexagonal_avanzado_106": {"texto":"The core remains stable even if infrastructure changes.","fonetica":"ðə kɔɹ ɹɪˈmeɪnz ˈsteɪbəl ˈivən ɪf ˈɪnfɹəˌstɹʌkʧɚ ˈʧeɪnʤɪz"},
    "hexagonal_avanzado_107": {"texto":"Adapters translate data from the outside world.","fonetica":"əˈdæptɚz ˈtɹænzleɪt ˈdeɪtə fɹəm ði ˈaʊtˌsaɪd wɝld"},
    "hexagonal_avanzado_108": {"texto":"Hexagonal architecture encourages clean design.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ ɪnˈkɝɪʤɪz klin dɪˈzaɪn"},
    "hexagonal_avanzado_109": {"texto":"System migration is easier with hexagonal.","fonetica":"ˈsɪstəm maɪˈɡɹeɪʃən ɪz ˈiziɚ wɪð hɛkˈsæɡənəl"},
    "hexagonal_avanzado_110": {"texto":"The core isn't contaminated with technical details.","fonetica":"ðə kɔɹ ˈɪzənt kənˈtæmɪneɪtɪd wɪð ˈtɛknɪkəl ˈditeɪlz"},
    "hexagonal_avanzado_111": {"texto":"Ports are stable interfaces long-term.","fonetica":"pɔɹts ɑɹ ˈsteɪbəl ˈɪntɚfeɪsɪz ˈlɔŋˈtɝm"},
    "hexagonal_avanzado_112": {"texto":"Adapters can be updated without risk.","fonetica":"əˈdæptɚz kæn bi ˈʌpˌdeɪtɪd wɪˈθaʊt ɹɪsk"},
    "hexagonal_avanzado_113": {"texto":"Hexagonal architecture improves traceability.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ ɪmˈpɹuvz ˌtɹeɪsəˈbɪlɪti"},
    "hexagonal_avanzado_114": {"texto":"Use cases reflect real business processes.","fonetica":"juz ˈkeɪsɪz ɹɪˈflɛkt ˈɹiəl ˈbɪznəs ˈpɹɑsɛsɪz"},
    "hexagonal_avanzado_115": {"texto":"The core remains immutable against external changes.","fonetica":"ðə kɔɹ ɹɪˈmeɪnz ɪˈmjutəbəl əˈɡɛnst ɪkˈstɝnəl ˈʧeɪnʤɪz"},
    "hexagonal_avanzado_116": {"texto":"Adapters allow different input methods.","fonetica":"əˈdæptɚz əˈlaʊ ˈdɪfɚənt ˈɪnˌpʊt ˈmɛθədz"},
    "hexagonal_avanzado_117": {"texto":"Ports isolate the domain from rapid changes.","fonetica":"pɔɹts ˈaɪsəleɪt ðə doʊˈmeɪn fɹəm ˈɹæpɪd ˈʧeɪnʤɪz"},
    "hexagonal_avanzado_118": {"texto":"The hexagonal approach promotes software longevity.","fonetica":"ðə hɛkˈsæɡənəl əˈpɹoʊʧ pɹəˈmoʊts ˈsɔftwɛɹ lɑnˈʤɛvɪti"},
    "hexagonal_avanzado_119": {"texto":"It improves the system's maintainability.","fonetica":"ɪt ɪmˈpɹuvz ðə ˈsɪstəmz ˌmeɪntənəˈbɪlɪti"},
    "hexagonal_avanzado_120": {"texto":"Hexagonal architecture ensures core independence.","fonetica":"hɛkˈsæɡənəl ˈɑɹkɪtɛkʧɚ ɪnˈʃʊɚz kɔɹ ˌɪndɪˈpɛndəns"}
  }