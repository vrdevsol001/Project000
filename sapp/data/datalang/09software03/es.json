{
  "clean_intro_1": {"texto":"Clean Architecture busca independencia de frameworks","fonetica":"klin aɾkitekˈtuɾa ˈβuska indepenˈdensja de ˈfɾeimwoɾks"},
  "clean_intro_2": {"texto":"El objetivo es mantener el software flexible y mantenible","fonetica":"el oβxeˈtiβo es mantenˈeɾ el ˈsofweɾ fleksˈiβle i mantenˈiβle"},
  "clean_intro_3": {"texto":"Separa responsabilidades en capas bien definidas","fonetica":"seˈpaɾa ɾesponsabiˈliðades en ˈkapas ˈβjen defiˈniðas"},
  "clean_intro_4": {"texto":"Las reglas de negocio son el núcleo del sistema","fonetica":"las ˈreɣlas de neˈɣosjo son el ˈnukleo del sisˈtema"},
  "clean_intro_5": {"texto":"La arquitectura debe ser independiente de la base de datos","fonetica":"la aɾkitekˈtuɾa ˈdeβe seɾ indepenˈdjente de la ˈβase de ˈðatos"},
  "clean_intro_6": {"texto":"La interfaz de usuario no debe afectar las reglas de negocio","fonetica":"la inteɾˈfas de usuˈaɾjo no ˈdeβe afekˈtaɾ las ˈreɣlas de neˈɣosjo"},
  "clean_intro_7": {"texto":"El código debe ser testable y fácil de probar","fonetica":"el ˈkoðiðo ˈdeβe seɾ testˈaβle i ˈfasjl de pɾoˈβaɾ"},
  "clean_intro_8": {"texto":"La arquitectura debe resistir cambios tecnológicos","fonetica":"la aɾkitekˈtuɾa ˈdeβe ɾesisˈtiɾ ˈkambjos teɣnoˈloxikos"},
  "clean_intro_9": {"texto":"Clean Architecture propone capas concéntricas","fonetica":"klin aɾkitekˈtuɾa pɾoˈpone ˈkapas konˈsentɾikas"},
  "clean_intro_10": {"texto":"El dominio está en el centro de la arquitectura","fonetica":"el doˈminjo esˈta en el ˈsentɾo de la aɾkitekˈtuɾa"},
  "clean_intro_11": {"texto":"Las dependencias siempre apuntan hacia adentro","fonetica":"las dependenˈsjas ˈsjempɾe aˈpuntaŋ asja aˈðentɾo"},
  "clean_intro_12": {"texto":"El código externo depende del interno, nunca al revés","fonetica":"el ˈkoðiðo eksˈteɾno deˈpende del inˈteɾno, ˈnuŋka al reˈβes"},
  "clean_intro_13": {"texto":"Las entidades representan las reglas de negocio más estables","fonetica":"las entiˈðaðes repɾesentan las ˈreɣlas de neˈɣosjo mas esˈtaβles"},
  "clean_intro_14": {"texto":"Los casos de uso coordinan las operaciones del sistema","fonetica":"los ˈkasos de ˈuso kooɾðiˈnan las opeɾaˈsjones del sisˈtema"},
  "clean_intro_15": {"texto":"La capa de aplicación orquesta la lógica de negocio","fonetica":"la ˈkapa de aplikasˈjon oɾˈkesta la ˈloxika de neˈɣosjo"},
  "clean_intro_16": {"texto":"La infraestructura implementa detalles técnicos","fonetica":"la infɾastɾukˈtuɾa impleˈmenta deˈtaʎes ˈtekni kos"},
  "clean_intro_17": {"texto":"Los frameworks son herramientas, no el núcleo","fonetica":"los ˈfɾeimwoɾks son eʐamiˈjentas no el ˈnukleo"},
  "clean_intro_18": {"texto":"Clean Architecture promueve la inversión de dependencias","fonetica":"klin aɾkitekˈtuɾa pɾoˈmweβe la inβeɾˈsjon de dependenˈsjas"},
  "clean_intro_19": {"texto":"Los detalles deben depender de las abstracciones","fonetica":"los deˈtaʎes ˈdeβen depenˈdeɾ de las abstɾakˈsjones"},
  "clean_intro_20": {"texto":"La regla de oro es la independencia del dominio","fonetica":"la ˈreɣla de ˈoɾo es la indepenˈdjenθja del doˈminjo"},
  "clean_intro_21": {"texto":"Las pruebas unitarias son más fáciles en Clean Architecture","fonetica":"las ˈpɾweβas uniˈtaɾjas son mas ˈfasjles en klin aɾkitekˈtuɾa"},
  "clean_intro_22": {"texto":"Los cambios en la UI no deben afectar al dominio","fonetica":"los ˈkambjos en la u i no ˈdeβen afekˈtaɾ al doˈminjo"},
  "clean_intro_23": {"texto":"Los cambios en la base de datos no afectan la lógica central","fonetica":"los ˈkambjos en la ˈβase de ˈðatos no afekˈtan la ˈloxika senˈtɾal"},
  "clean_intro_24": {"texto":"La arquitectura facilita migraciones tecnológicas","fonetica":"la aɾkitekˈtuɾa fasiˈlita miɣɾaˈsjones teɣnoˈloxikas"},
  "clean_intro_25": {"texto":"Clean Architecture permite escalar el sistema","fonetica":"klin aɾkitekˈtuɾa peɾˈmite eskˈalaɾ el sisˈtema"},
  "clean_intro_26": {"texto":"El diseño desacopla las capas de infraestructura","fonetica":"el diˈseɲo desakoˈpla las ˈkapas de infɾastɾukˈtuɾa"},
  "clean_intro_27": {"texto":"La independencia reduce costos de mantenimiento","fonetica":"la indepenˈdjenθja reˈðuθe ˈkostos de mantenimjenˈto"},
  "clean_intro_28": {"texto":"La arquitectura favorece la evolución del software","fonetica":"la aɾkitekˈtuɾa faβoˈɾese la eβoluˈsjón del ˈsofweɾ"},
  "clean_intro_29": {"texto":"El dominio no conoce detalles técnicos","fonetica":"el doˈminjo no koˈnoθe deˈtaʎes ˈtekni kos"},
  "clean_intro_30": {"texto":"El sistema es más robusto con reglas claras","fonetica":"el sisˈtema es mas roˈβusto kon ˈreɣlas ˈklaɾas"},

  "clean_layers_31": {"texto":"Las capas forman una jerarquía de dependencias","fonetica":"las ˈkapas ˈfoɾman una xeɾaɾˈkia de dependenˈsjas"},
  "clean_layers_32": {"texto":"El dominio es inmune a los cambios externos","fonetica":"el doˈminjo es imˈmune a los ˈkambjos eksˈteɾnos"},
  "clean_layers_33": {"texto":"Los casos de uso coordinan flujos de negocio","fonetica":"los ˈkasos de ˈuso kooɾðiˈnan ˈfluxos de neˈɣosjo"},
  "clean_layers_34": {"texto":"La capa de aplicación interactúa con la infraestructura","fonetica":"la ˈkapa de aplikasˈjon inteɾakˈtwa kon la infɾastɾukˈtuɾa"},
  "clean_layers_35": {"texto":"Las interfaces definen contratos claros","fonetica":"las inteɾˈfases deˈfinen konˈtɾatos ˈklaɾos"},
  "clean_layers_36": {"texto":"El desacoplamiento mejora la mantenibilidad","fonetica":"el desakoˈplamjento meˈxoɾa la mantenibiliˈðað"},
  "clean_layers_37": {"texto":"Los casos de uso se prueban sin frameworks","fonetica":"los ˈkasos de ˈuso se ˈpɾweβan sin ˈfɾeimwoɾks"},
  "clean_layers_38": {"texto":"La infraestructura se reemplaza sin tocar el dominio","fonetica":"la infɾastɾukˈtuɾa se reemˈplasa sin toˈkaɾ el doˈminjo"},
  "clean_layers_39": {"texto":"El sistema se construye desde adentro hacia afuera","fonetica":"el sisˈtema se konstɾuˈʝe desde aˈðentɾo asja aˈweɾa"},
  "clean_layers_40": {"texto":"La lógica de negocio no depende de detalles técnicos","fonetica":"la ˈloxika de neˈɣosjo no deˈpende de deˈtaʎes ˈtekni kos"},
  "clean_layers_41": {"texto":"Los casos de uso expresan el comportamiento esperado","fonetica":"los ˈkasos de ˈuso ekspɾeˈsan el kompoɾtamiˈjento espeˈɾaðo"},
  "clean_layers_42": {"texto":"La infraestructura implementa adaptadores","fonetica":"la infɾastɾukˈtuɾa impleˈmenta adaptadoˈɾes"},
  "clean_layers_43": {"texto":"Las reglas de negocio no cambian con la UI","fonetica":"las ˈreɣlas de neˈɣosjo no ˈkambjan kon la u i"},
  "clean_layers_44": {"texto":"La arquitectura facilita pruebas de integración","fonetica":"la aɾkitekˈtuɾa fasiˈlita ˈpɾweβas de inteɣɾaˈsjón"},
  "clean_layers_45": {"texto":"El sistema resiste cambios de base de datos","fonetica":"el sisˈtema reˈsiste ˈkambjos de ˈβase de ˈðatos"},
  "clean_layers_46": {"texto":"Clean Architecture sigue el principio de inversión de dependencias","fonetica":"klin aɾkitekˈtuɾa ˈsiɣe el pɾinˈθipjo de inβeɾˈsjon de dependenˈsjas"},
  "clean_layers_47": {"texto":"Los detalles concretos dependen de interfaces abstractas","fonetica":"los deˈtaʎes konˈkɾetos depenˈden de inteɾˈfases absˈtɾaktas"},
  "clean_layers_48": {"texto":"Los frameworks son opcionales y reemplazables","fonetica":"los ˈfɾeimwoɾks son opsjoˈnales i reemplaˈθaβles"},
  "clean_layers_49": {"texto":"La infraestructura se conecta con el mundo exterior","fonetica":"la infɾastɾukˈtuɾa se koˈnekta kon el ˈmundo ekstˈeɾjoɾ"},
  "clean_layers_50": {"texto":"La inversión de dependencias protege el núcleo","fonetica":"la inβeɾˈsjon de dependenˈsjas pɾoˈtexe el ˈnukleo"},
  "clean_layers_51": {"texto":"El dominio nunca depende de detalles cambiantes","fonetica":"el doˈminjo ˈnuŋka deˈpende de deˈtaʎes kamˈbjantes"},
  "clean_layers_52": {"texto":"La arquitectura separa preocupaciones claramente","fonetica":"la aɾkitekˈtuɾa seˈpaɾa pɾeokupaˈsjones klaɾaˈmente"},
  "clean_layers_53": {"texto":"Cada capa tiene un propósito específico","fonetica":"ˈkaða ˈkapa ˈtjene un pɾoˈposito espeˈsifiko"},
  "clean_layers_54": {"texto":"Las entidades son independientes del tiempo","fonetica":"las entiˈðaðes son indepenˈdjentes del ˈtjem po"},
  "clean_layers_55": {"texto":"La aplicación evoluciona sin romper el dominio","fonetica":"la aplikasˈjon eβoluˈθjona sin romˈpeɾ el doˈminjo"},
  "clean_layers_56": {"texto":"Los casos de uso mantienen la lógica de negocio clara","fonetica":"los ˈkasos de ˈuso mantenˈen la ˈloxika de neˈɣosjo ˈklaɾa"},
  "clean_layers_57": {"texto":"La infraestructura depende de la aplicación, no al revés","fonetica":"la infɾastɾukˈtuɾa deˈpende de la aplikasˈjon no al reˈβes"},
  "clean_layers_58": {"texto":"La UI se conecta a través de adaptadores","fonetica":"la u i se koˈnekta a tɾaˈβes de adaptadoˈɾes"},
  "clean_layers_59": {"texto":"El núcleo no conoce detalles externos","fonetica":"el ˈnukleo no koˈnoθe deˈtaʎes ekstˈeɾnos"},
  "clean_layers_60": {"texto":"La arquitectura centraliza la lógica de negocio","fonetica":"la aɾkitekˈtuɾa sentɾaliˈθa la ˈloxika de neˈɣosjo"}
,
  "clean_principios_61": {"texto":"El principio de inversión de dependencias es clave en Clean Architecture","fonetica":"el pɾinˈθipjo de inβeɾˈsjon de dependenˈsjas es ˈklaβe en klin aɾkitekˈtuɾa"},
  "clean_principios_62": {"texto":"Los detalles dependen de las abstracciones, no al revés","fonetica":"los deˈtaʎes depenˈden de las abstɾakˈsjones no al reˈβes"},
  "clean_principios_63": {"texto":"La arquitectura limpia separa el qué del cómo","fonetica":"la aɾkitekˈtuɾa ˈlimpja seˈpaɾa el ke del ˈkomo"},
  "clean_principios_64": {"texto":"El dominio representa las reglas más estables del negocio","fonetica":"el doˈminjo repɾesenta las ˈreɣlas mas esˈtaβles del neˈɣosjo"},
  "clean_principios_65": {"texto":"La infraestructura cambia con la tecnología","fonetica":"la infɾastɾukˈtuɾa ˈkambja kon la teɣnoloˈxia"},
  "clean_principios_66": {"texto":"Los casos de uso describen interacciones de negocio","fonetica":"los ˈkasos de ˈuso desˈkɾiβen inteɾakˈsjones de neˈɣosjo"},
  "clean_principios_67": {"texto":"El núcleo es estable y resistente a cambios","fonetica":"el ˈnukleo es esˈtaβle i ɾesisˈtjente a ˈkambjos"},
  "clean_principios_68": {"texto":"La separación de capas reduce el acoplamiento","fonetica":"la sepaɾaˈsjón de ˈkapas reˈðuθe el akoplaˈmjento"},
  "clean_principios_69": {"texto":"Cada capa solo conoce a la interior","fonetica":"ˈkaða ˈkapa ˈsolo koˈnoθe a la inteˈɾjoɾ"},
  "clean_principios_70": {"texto":"Las pruebas se simplifican al aislar la lógica","fonetica":"las ˈpɾweβas se simplifiˈkan al aisˈlaɾ la ˈloxika"},
  "clean_principios_71": {"texto":"El dominio no depende de la base de datos","fonetica":"el doˈminjo no deˈpende de la ˈβase de ˈðatos"},
  "clean_principios_72": {"texto":"La UI se puede reemplazar sin tocar el dominio","fonetica":"la u i se ˈpwede reemplaˈθaɾ sin toˈkaɾ el doˈminjo"},
  "clean_principios_73": {"texto":"El diseño facilita la escalabilidad del sistema","fonetica":"el diˈseɲo fasiˈlita la eskalabiˈliðað del sisˈtema"},
  "clean_principios_74": {"texto":"La arquitectura limpia minimiza dependencias externas","fonetica":"la aɾkitekˈtuɾa ˈlimpja minimiˈθa dependenˈsjas ekstˈeɾnas"},
  "clean_principios_75": {"texto":"El dominio se mantiene puro y consistente","fonetica":"el doˈminjo se mantenˈe pjuɾo i konsisˈtente"},
  "clean_principios_76": {"texto":"Los detalles técnicos son reemplazables","fonetica":"los deˈtaʎes ˈtekni kos son reemplaˈθaβles"},
  "clean_principios_77": {"texto":"La arquitectura fomenta la reutilización de código","fonetica":"la aɾkitekˈtuɾa foˈmenta la reutiˈlisajon de ˈkoðiðo"},
  "clean_principios_78": {"texto":"Los casos de uso expresan intenciones claras","fonetica":"los ˈkasos de ˈuso ekspɾeˈsan intenˈsjones ˈklaɾas"},
  "clean_principios_79": {"texto":"El dominio es independiente del entorno externo","fonetica":"el doˈminjo es indepenˈdjente del enˈtoɾno ekstˈeɾno"},
  "clean_principios_80": {"texto":"La arquitectura limpia evita la rigidez del sistema","fonetica":"la aɾkitekˈtuɾa ˈlimpja eˈβita la riχiˈðeð del sisˈtema"},
  "clean_principios_81": {"texto":"La mantenibilidad mejora al reducir dependencias","fonetica":"la mantenibiliˈðað meˈxoɾa al reˈðuθiɾ dependenˈsjas"},
  "clean_principios_82": {"texto":"El sistema resiste cambios inesperados","fonetica":"el sisˈtema reˈsiste ˈkambjos inespˈeɾaðos"},
  "clean_principios_83": {"texto":"Clean Architecture facilita la portabilidad","fonetica":"klin aɾkitekˈtuɾa fasiˈlita la poɾtaβiliˈðað"},
  "clean_principios_84": {"texto":"La separación de capas mejora la comprensión","fonetica":"la sepaɾaˈsjón de ˈkapas meˈxoɾa la komprenˈsjon"},
  "clean_principios_85": {"texto":"Cada capa tiene una responsabilidad clara","fonetica":"ˈkaða ˈkapa ˈtjene una ɾesponsabiliˈðað ˈklaɾa"},
  "clean_principios_86": {"texto":"Los frameworks no dictan la arquitectura","fonetica":"los ˈfɾeimwoɾks no ˈðiktan la aɾkitekˈtuɾa"},
  "clean_principios_87": {"texto":"La arquitectura limpia prioriza la lógica central","fonetica":"la aɾkitekˈtuɾa ˈlimpja pɾjoˈɾisa la ˈloxika senˈtɾal"},
  "clean_principios_88": {"texto":"El núcleo define las políticas de negocio","fonetica":"el ˈnukleo deˈfine las poˈlitikas de neˈɣosjo"},
  "clean_principios_89": {"texto":"La infraestructura implementa los detalles externos","fonetica":"la infɾastɾukˈtuɾa impleˈmenta los deˈtaʎes ekstˈeɾnos"},
  "clean_principios_90": {"texto":"Los adaptadores conectan las capas externas","fonetica":"los adaptadoˈɾes koˈnektan las ˈkapas ekstˈeɾnas"},

  "clean_avanzado_91": {"texto":"La arquitectura limpia reduce el costo del cambio","fonetica":"la aɾkitekˈtuɾa ˈlimpja reˈðuθe el ˈkosto del ˈkambjo"},
  "clean_avanzado_92": {"texto":"El sistema evoluciona sin reescribir el núcleo","fonetica":"el sisˈtema eβoluˈθjona sin reesˈkɾiβiɾ el ˈnukleo"},
  "clean_avanzado_93": {"texto":"La independencia del dominio asegura estabilidad","fonetica":"la indepenˈdjensja del doˈminjo aseˈɣuɾa estiβiliˈðað"},
  "clean_avanzado_94": {"texto":"La infraestructura se puede sustituir fácilmente","fonetica":"la infɾastɾukˈtuɾa se ˈpwede sustiˈtwiɾ ˈfasjlmente"},
  "clean_avanzado_95": {"texto":"Los casos de uso definen comportamientos repetibles","fonetica":"los ˈkasos de ˈuso deˈfinen kompoɾtamiˈjentos repeˈtiβles"},
  "clean_avanzado_96": {"texto":"El dominio mantiene la integridad del negocio","fonetica":"el doˈminjo mantenˈe la inteɣɾiˈðað del neˈɣosjo"},
  "clean_avanzado_97": {"texto":"La arquitectura limpia protege contra cambios externos","fonetica":"la aɾkitekˈtuɾa ˈlimpja pɾoˈtexe ˈkontra ˈkambjos ekstˈeɾnos"},
  "clean_avanzado_98": {"texto":"La inversión de dependencias mantiene el orden","fonetica":"la inβeɾˈsjon de dependenˈsjas mantenˈe el ˈoɾðen"},
  "clean_avanzado_99": {"texto":"Las capas internas nunca conocen detalles de infraestructura","fonetica":"las ˈkapas inteɾnas ˈnuŋka koˈnoθen deˈtaʎes de infɾastɾukˈtuɾa"},
  "clean_avanzado_100": {"texto":"La UI es solo un detalle reemplazable","fonetica":"la u i es ˈsolo un deˈtaʎe reemplaˈθaβle"},
  "clean_avanzado_101": {"texto":"El diseño limpio favorece la colaboración en equipo","fonetica":"el diˈseɲo ˈlimpio faβoˈɾese la kolaboɾaˈsjon en ekiˈpo"},
  "clean_avanzado_102": {"texto":"La claridad de capas mejora la documentación","fonetica":"la klaɾiˈðað de ˈkapas meˈxoɾa la dokumenˈtasjon"},
  "clean_avanzado_103": {"texto":"El dominio define el lenguaje ubicuo del negocio","fonetica":"el doˈminjo deˈfine el lenˈɣwaχe uβiˈkuo del neˈɣosjo"},
  "clean_avanzado_104": {"texto":"La arquitectura limpia evita dependencias circulares","fonetica":"la aɾkitekˈtuɾa ˈlimpja eˈβita dependenˈsjas θiɾkuˈlaɾes"},
  "clean_avanzado_105": {"texto":"Los tests unitarios se enfocan en reglas de negocio","fonetica":"los tests uniˈtaɾjos se enfˈokan en ˈreɣlas de neˈɣosjo"},
  "clean_avanzado_106": {"texto":"La infraestructura solo ejecuta instrucciones del dominio","fonetica":"la infɾastɾukˈtuɾa ˈsolo exekuta instɾukˈsjones del doˈminjo"},
  "clean_avanzado_107": {"texto":"Las capas concéntricas protegen el núcleo del sistema","fonetica":"las ˈkapas konˈsentɾikas pɾoˈtexen el ˈnukleo del sisˈtema"},
  "clean_avanzado_108": {"texto":"El dominio es la parte más valiosa del software","fonetica":"el doˈminjo es la ˈpaɾte mas βaˈljosa del ˈsofweɾ"},
  "clean_avanzado_109": {"texto":"Los detalles técnicos cambian, las reglas no","fonetica":"los deˈtaʎes ˈtekni kos ˈkambjan, las ˈreɣlas no"},
  "clean_avanzado_110": {"texto":"La arquitectura limpia facilita la integración continua","fonetica":"la aɾkitekˈtuɾa ˈlimpja fasiˈlita la inteɣɾaˈsjón kontinuˈa"},
  "clean_avanzado_111": {"texto":"El sistema es más confiable con capas bien definidas","fonetica":"el sisˈtema es mas konfiˈaβle kon ˈkapas ˈβjen defiˈniðas"},
  "clean_avanzado_112": {"texto":"La arquitectura limpia favorece la extensibilidad","fonetica":"la aɾkitekˈtuɾa ˈlimpja faβoˈɾese la ekstensiβiliˈðað"},
  "clean_avanzado_113": {"texto":"Los principios sólidos apoyan Clean Architecture","fonetica":"los pɾinˈθipjos ˈsoliðos apoˈʝan klin aɾkitekˈtuɾa"},
  "clean_avanzado_114": {"texto":"El núcleo del sistema es estable y predecible","fonetica":"el ˈnukleo del sisˈtema es esˈtaβle i pɾeðeˈθiβle"},
  "clean_avanzado_115": {"texto":"Los detalles externos se reemplazan sin riesgo","fonetica":"los deˈtaʎes ekstˈeɾnos se reemplaˈθan sin ˈrjesɣo"},
  "clean_avanzado_116": {"texto":"La arquitectura limpia impulsa la calidad del software","fonetica":"la aɾkitekˈtuɾa ˈlimpja imˈpulsa la kaliˈðað del ˈsofweɾ"},
  "clean_avanzado_117": {"texto":"La independencia tecnológica asegura longevidad","fonetica":"la indepenˈdjensja teɣnoloˈxika aseˈɣuɾa lonxeβiðað"},
  "clean_avanzado_118": {"texto":"Los casos de uso son el puente entre dominio e infraestructura","fonetica":"los ˈkasos de ˈuso son el ˈpwente entɾe doˈminjo e infɾastɾukˈtuɾa"},
  "clean_avanzado_119": {"texto":"El núcleo del software no cambia con la tecnología","fonetica":"el ˈnukleo del ˈsofweɾ no ˈkambja kon la teɣnoloˈxia"},
  "clean_avanzado_120": {"texto":"Clean Architecture es una guía para sistemas sostenibles","fonetica":"klin aɾkitekˈtuɾa es una ˈɣiða paɾa sisˈtemas sostenˈiβles"}
}

