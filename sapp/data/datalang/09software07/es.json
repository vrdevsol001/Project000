{
    "microservicios_definicion": {"texto":"La arquitectura de microservicios divide un sistema en servicios pequeños e independientes.","fonetica":"la aɾki.teɾˈtuɾa de mikɾoseɾˈβisjos diˈβiðe un sisˈtema en seɾˈβisjos ˈpekeɲos e indepenˈdientes"},
    "microservicios_independencia": {"texto":"Cada microservicio puede desarrollarse, desplegarse y escalarse de forma independiente.","fonetica":"ˈkaða mikɾoseɾˈβisjo ˈpweðe de.sa.roˈʝaɾ.se des.pleˈɣaɾ.se i eskaˈlaɾ.se de ˈfoɾma indepenˈdiente"},
    "microservicios_comunicacion": {"texto":"Los microservicios se comunican principalmente mediante APIs ligeras.","fonetica":"los mikɾoseɾˈβisjos se komu.niˈkan pɾin.siˈpal.mente meˈðjante ˈa.pis liˈxeɾas"},
    "microservicios_autonomia": {"texto":"La autonomía de cada servicio es un principio fundamental de los microservicios.","fonetica":"la awto.noˈmi.a de ˈkaða seɾˈβisjo es un pɾinˈsipjo fun.da.menˈtal de los mikɾoseɾˈβisjos"},
    "microservicios_despliegue": {"texto":"Los equipos pueden desplegar microservicios sin afectar a otros.","fonetica":"los eˈkipos ˈpweðen des.pleˈɣaɾ mikɾoseɾˈβisjos sin afekˈtaɾ a ˈotɾos"},
    "microservicios_tecnologias": {"texto":"Cada microservicio puede usar diferentes lenguajes o tecnologías.","fonetica":"ˈkaða mikɾoseɾˈβisjo ˈpweðe uˈsaɾ di.feˈɾentes leŋˈɡwa.xes o tekno.loˈxias"},
    "microservicios_escalabilidad": {"texto":"La arquitectura de microservicios facilita la escalabilidad horizontal.","fonetica":"la aɾki.teɾˈtuɾa de mikɾoseɾˈβisjos fasiˈlita la eska.la.βiliˈðað oɾisonˈtal"},
    "microservicios_flexibilidad": {"texto":"Los microservicios permiten flexibilidad en el desarrollo y mantenimiento.","fonetica":"los mikɾoseɾˈβisjos peɾˈmiten fleksibi.liˈðað en el de.saˈro.ʝo i mantenˈimjento"},
    "microservicios_resiliencia": {"texto":"Los fallos en un microservicio no deberían colapsar todo el sistema.","fonetica":"los ˈfa.ʝos en un mikɾoseɾˈβisjo no deβeˈɾian ko.lapˈsaɾ ˈtoðo el sisˈtema"},
    "microservicios_orientacion_negocio": {"texto":"Cada microservicio debe alinearse a una capacidad del negocio.","fonetica":"ˈkaða mikɾoseɾˈβisjo ˈdeβe aliˈnjeaɾ.se a ˈuna kapaθiˈðað del neˈɣoθjo"},
    "microservicios_modularidad": {"texto":"La modularidad permite evolucionar partes del sistema de forma aislada.","fonetica":"la mo.ðu.laɾiˈðað peɾˈmite eβoluθjoˈnaɾ ˈpaɾtes del sisˈtema de ˈfoɾma aisˈlaða"},
    "microservicios_desarrollo_paralelo": {"texto":"Diferentes equipos pueden trabajar en paralelo en distintos microservicios.","fonetica":"difeˈɾentes eˈkipos ˈpweðen tɾaβaˈxaɾ en paɾaˈlelo en disˈtintos mikɾoseɾˈβisjos"},
    "microservicios_pruebas": {"texto":"Las pruebas unitarias son más manejables en microservicios pequeños.","fonetica":"las ˈpɾweβas uniˈtaɾjas son mas maneˈxaβles en mikɾoseɾˈβisjos peˈkeɲos"},
    "microservicios_despliegue_continuo": {"texto":"La integración y despliegue continuo encajan bien con microservicios.","fonetica":"la inteɣɾaˈθjon i des.pleˈɣwe kontinuo enˈkaxan ˈbjen kon mikɾoseɾˈβisjos"},
    "microservicios_mantenimiento": {"texto":"Los microservicios simplifican el mantenimiento a largo plazo.","fonetica":"los mikɾoseɾˈβisjos simpliˈfikan el mantenˈimjento a ˈlaɾɣo ˈplaθo"},
    "microservicios_deploy_independiente": {"texto":"Cada microservicio se despliega sin afectar a los demás.","fonetica":"ˈkaða mikɾoseɾˈβisjo se des.pleˈɣa sin afekˈtaɾ a los deˈmas"},
    "microservicios_complejidad": {"texto":"La arquitectura de microservicios introduce nueva complejidad en la comunicación.","fonetica":"la aɾki.teɾˈtuɾa de mikɾoseɾˈβisjos intɾoˈðuθe ˈnweβa komplɛxiˈðað en la komuni.kaˈθjon"},
    "microservicios_base_datos": {"texto":"Cada microservicio puede tener su propia base de datos.","fonetica":"ˈkaða mikɾoseɾˈβisjo ˈpweðe teˈneɾ su ˈpɾopja ˈβase de ˈðatos"},
    "microservicios_autosuficiencia": {"texto":"Un microservicio debe ser autosuficiente en cuanto a lógica y datos.","fonetica":"un mikɾoseɾˈβisjo ˈdeβe seɾ auto.sufiˈθjente en ˈkwanto a ˈloxika i ˈðatos"},
    "microservicios_beneficios": {"texto":"Los beneficios principales son flexibilidad, escalabilidad y resiliencia.","fonetica":"los beneˈfisjos pɾinθiˈpales son fleksibi.liˈðað eska.la.βiliˈðað i resiˈljensja"},
    "microservicios_limitaciones": {"texto":"Las limitaciones incluyen mayor complejidad y sobrecarga operativa.","fonetica":"las limi.taˈθjones inˈklujen maˈxor komplɛxiˈðað i soβɾeˈkaɾɣað opeɾaˈtiβa"},
    "microservicios_patrones": {"texto":"Existen patrones comunes como API Gateway y Service Discovery.","fonetica":"ekˈsisten paˈtɾones koˈmunes ˈkomo a.pi ˈɣei̯twei i ˈseɾβis disˈkoβeɾi"},
    "microservicios_api_gateway": {"texto":"El API Gateway centraliza peticiones y enruta a los microservicios.","fonetica":"el a.pi ˈɣei̯twei sentɾaˈliθa petiˈθjones i enˈruta a los mikɾoseɾˈβisjos"},
    "microservicios_discovery": {"texto":"El descubrimiento de servicios facilita la localización dinámica.","fonetica":"el deskuˈβɾimjento de seɾˈβisjos fasiˈlita la loka.liθaˈθjon ðiˈnamika"},
    "microservicios_comunicacion_sincronica": {"texto":"Los microservicios pueden comunicarse de forma síncrona.","fonetica":"los mikɾoseɾˈβisjos ˈpweðen komu.niˈkaɾ.se de ˈfoɾma ˈsin.kɾona"},
    "microservicios_comunicacion_asincronica": {"texto":"La comunicación asíncrona se logra mediante colas y eventos.","fonetica":"la komu.nikaˈθjon aˈsiŋkɾona se ˈloɣɾa meˈðjante ˈkolas i eˈβentos"},
    "microservicios_mensajeria": {"texto":"Los sistemas de mensajería soportan integración asíncrona.","fonetica":"los sisˈtemas de mensaxeˈɾia soˈpoɾtan inteɣɾaˈθjon aˈsiŋkɾona"},
    "microservicios_observabilidad": {"texto":"La observabilidad incluye monitoreo, logging y trazabilidad.","fonetica":"la oβseɾβaβiliˈðað inˈkluje moniˈtoɾeo ˈloɣin i tɾaθaβiliˈðað"},
    "microservicios_orquestacion": {"texto":"La orquestación coordina la ejecución de múltiples microservicios.","fonetica":"la oɾkes.taˈθjon koɾðiˈna la exe.kuˈθjon de ˈmultiples mikɾoseɾˈβisjos"}
  ,
   "microservicios_contenedores": {"texto":"Los microservicios suelen ejecutarse en contenedores como Docker.","fonetica":"los mikɾoseɾˈβisjos ˈswelen exekutˈaɾ.se en kon.te.neˈðoɾes ˈkomo ˈdokɛr"},
    "microservicios_kubernetes": {"texto":"Kubernetes es usado para orquestar contenedores y microservicios.","fonetica":"kuβeɾˈnetes es uˈsaðo ˈpaɾa oɾkesˈtɾaɾ kon.te.neˈðoɾes i mikɾoseɾˈβisjos"},
    "microservicios_escalado_horizontal": {"texto":"Los microservicios permiten escalar horizontalmente según la demanda.","fonetica":"los mikɾoseɾˈβisjos peɾˈmiten eskaˈlaɾ oɾisonˈtal.mente seˈɣun la deˈmanda"},
    "microservicios_escalado_vertical": {"texto":"El escalado vertical no siempre es eficiente en microservicios.","fonetica":"el eskaˈlaðo βeɾtiˈkal no ˈsjempɾe es efiˈθjente en mikɾoseɾˈβisjos"},
    "microservicios_tolerancia_fallos": {"texto":"La tolerancia a fallos es esencial en sistemas de microservicios.","fonetica":"la toleˈɾanθja a ˈfaʝos es esenˈθjal en sisˈtemas de mikɾoseɾˈβisjos"},
    "microservicios_circuit_breaker": {"texto":"El patrón Circuit Breaker evita fallos en cascada.","fonetica":"el paˈtɾon ˈsiɾkwi̯t ˈbɾei̯keɾ eˈβita ˈfaʝos en kasˈkaða"},
    "microservicios_reintentos": {"texto":"El mecanismo de reintentos mejora la resiliencia de las llamadas.","fonetica":"el mekaˈnismo de reinˈtentos meˈxoɾa la resiˈljensja de las ʝaˈmaðas"},
    "microservicios_timeout": {"texto":"Configurar tiempos de espera protege al sistema de bloqueos.","fonetica":"konfiɣuˈɾaɾ ˈtjempoz de espeˈɾa pɾoˈtexe al sisˈtema de bloˈkeos"},
    "microservicios_balanceo": {"texto":"El balanceo de carga distribuye el tráfico entre microservicios.","fonetica":"el βalanˈθeo de ˈkaɾɣa distɾiˈβwe el ˈtɾafiko ˈentɾe mikɾoseɾˈβisjos"},
    "microservicios_autoscaling": {"texto":"El autoscaling ajusta la capacidad automáticamente.","fonetica":"el auto.eskaˈlin axusˈta la kapaθiˈðað auto.maˈtikamente"},
    "microservicios_seguridad": {"texto":"La seguridad se refuerza con autenticación y autorización.","fonetica":"la seɣuɾiˈðað se reˈfweɾsa kon awtenti.kaˈθjon i awtoriθaˈθjon"},
    "microservicios_oauth2": {"texto":"OAuth2 es un estándar común para autenticación en microservicios.","fonetica":"o.aβ ˈdos es un esˈtandaɾ koˈmun ˈpaɾa awtenti.kaˈθjon en mikɾoseɾˈβisjos"},
    "microservicios_jwt": {"texto":"Los tokens JWT se usan para la seguridad de las comunicaciones.","fonetica":"los ˈtokens xotaβeˈte se ˈusan ˈpaɾa la seɣuɾiˈðað de las komuni.kaˈθjones"},
    "microservicios_monitorizacion": {"texto":"La monitorización permite detectar problemas en tiempo real.","fonetica":"la moni.toɾiθaˈθjon peɾˈmite de.tektˈaɾ pɾoˈβlemas en ˈtjempo reˈal"},
    "microservicios_logging": {"texto":"El logging centralizado ayuda al análisis de errores.","fonetica":"el ˈloɣin sentɾaliˈθaðo aˈʝuða al aˈnalisis de eˈrores"},
    "microservicios_tracing": {"texto":"El tracing distribuye información sobre las llamadas entre servicios.","fonetica":"el ˈtɾei̯sin distɾiˈβwe infoɾmaˈθjon soβɾe las ʝaˈmaðas ˈentɾe seɾˈβisjos"},
    "microservicios_metricas": {"texto":"Las métricas permiten evaluar el rendimiento del sistema.","fonetica":"las ˈmetɾikas peɾˈmiten eβaluˈaɾ el ren.diˈmjento del sisˈtema"},
    "microservicios_devops": {"texto":"La cultura DevOps facilita la entrega continua en microservicios.","fonetica":"la kulˈtuɾa deβops fasiˈlita la enˈtɾeɣa kontinˈwa en mikɾoseɾˈβisjos"},
    "microservicios_ci_cd": {"texto":"La integración continua y entrega continua son clave en microservicios.","fonetica":"la inteɣɾaˈθjon kontinˈwa i enˈtɾeɣa kontinˈwa son ˈklaβe en mikɾoseɾˈβisjos"},
    "microservicios_testing_contract": {"texto":"Las pruebas de contrato verifican la compatibilidad entre servicios.","fonetica":"las ˈpɾweβas de konˈtɾakto βeɾifiˈkan la kompa.tiβiliˈðað ˈentɾe seɾˈβisjos"},
    "microservicios_canary_release": {"texto":"El despliegue canario reduce riesgos al liberar nuevas versiones.","fonetica":"el des.pleˈɣwe kaˈnaɾjo reˈðuθe ˈrjesɣos al liβeˈɾaɾ ˈnweβas βeɾˈsjones"},
    "microservicios_blue_green": {"texto":"La estrategia Blue-Green Deployment facilita cambios sin interrupciones.","fonetica":"la estɾateˈxia blu ɣɾin deˈploi̯ment fasiˈlita ˈkaɱβjos sin inteɾupˈθjones"},
    "microservicios_rollback": {"texto":"El rollback permite volver a una versión estable en caso de fallo.","fonetica":"el ˈrolβak peɾˈmite βolˈβeɾ a ˈuna βeɾˈsjon esˈtaβle en ˈkaso de ˈfaʝo"},
    "microservicios_pipeline": {"texto":"Los pipelines automatizan la construcción, prueba y despliegue.","fonetica":"los pai̯pˈlains auto.maˈθizan la konstɾukˈθjon ˈpɾweβa i des.pleˈɣwe"},
    "microservicios_observabilidad_full": {"texto":"La observabilidad completa integra logs, métricas y trazas.","fonetica":"la oβseɾβaβiliˈðað komˈpleta inteˈɣɾa logs ˈmetɾikas i ˈtɾaθas"},
    "microservicios_configuracion": {"texto":"La configuración centralizada ayuda a gestionar parámetros.","fonetica":"la konfiɣuɾaˈθjon sentɾaliˈθaða aˈʝuða a xestjoˈnaɾ paɾaˈmetɾos"},
    "microservicios_secretos": {"texto":"El manejo de secretos es crítico para la seguridad.","fonetica":"el maˈnexo de seˈkɾetos es ˈkɾitiko ˈpaɾa la seɣuɾiˈðað"},
    "microservicios_config_server": {"texto":"Un servidor de configuración distribuye ajustes a los servicios.","fonetica":"un seɾβiˈðoɾ de konfiɣuɾaˈθjon distɾiˈβwe aˈxustes a los seɾˈβisjos"}
  ,
   "microservicios_event_driven": {"texto":"Los microservicios suelen comunicarse mediante eventos.","fonetica":"los mikɾoseɾˈβisjos ˈswelen komunikaɾˈse meˈdjan̪te eˈβentos"},
    "microservicios_colas_mensajes": {"texto":"Las colas de mensajes desacoplan productores y consumidores.","fonetica":"las ˈkolas de menˈsaxes desaˈkoplan pɾoduθˈtoɾes i konsumiˈðoɾes"},
    "microservicios_kafka": {"texto":"Apache Kafka es usado frecuentemente como sistema de mensajería.","fonetica":"aˈpatʃe ˈkafka es uˈsaðo fɾekwenˈtemente ˈkomo sisˈtema de mensaxeˈɾia"},
    "microservicios_rabbitmq": {"texto":"RabbitMQ es otra opción popular para comunicación asíncrona.","fonetica":"ˈrabbit emeku es ˈotɾa opθjon popuˈlaɾ ˈpaɾa komunikaˈθjon aˈsiŋkɾona"},
    "microservicios_streaming": {"texto":"El streaming de datos conecta productores y suscriptores en tiempo real.","fonetica":"el estɾiˈmin de ˈðatos koˈnekta pɾoduθˈtoɾes i suskɾiˈptoɾes en ˈtjempo reˈal"},
    "microservicios_asincronia": {"texto":"La asincronía permite procesar tareas sin bloquear al sistema.","fonetica":"la asinkɾoˈnia peɾˈmite pɾoseˈsaɾ taˈɾeas sin bloˈkeaɾ al sisˈtema"},
    "microservicios_saga": {"texto":"El patrón Saga coordina transacciones distribuidas.","fonetica":"el paˈtɾon ˈsaɣa koorˈðina tɾansakˈθjones distɾiˈβwiðas"},
    "microservicios_choreography": {"texto":"La coreografía distribuye la lógica de coordinación en los servicios.","fonetica":"la koɾeoˈɣɾafia distɾiˈβwe la ˈloxika de kooɾðinaˈθjon en los seɾˈβisjos"},
    "microservicios_orchestration": {"texto":"La orquestación centraliza el control de los flujos de trabajo.","fonetica":"la oɾkestaˈθjon sentɾaliˈθa el konˈtɾol de los ˈfluxos de tɾaˈβaxo"},
    "microservicios_idempotencia": {"texto":"Las operaciones idempotentes evitan efectos duplicados.","fonetica":"las opeɾaˈθjones idem.poˈtentes eˈβitan eˈfektos dupliˈkaðos"},
    "microservicios_consistencia_eventual": {"texto":"La consistencia eventual es común en sistemas distribuidos.","fonetica":"la konsisˈtensja eβenˈtwal es koˈmun en sisˈtemas distɾiˈβwiðos"},
    "microservicios_event_sourcing": {"texto":"Event Sourcing guarda el historial de eventos como fuente de verdad.","fonetica":"ˈevent ˈsoɾsin ɣwaɾða el istoˈɾjal de eˈβentos ˈkomo ˈfwente de βeɾˈðað"},
    "microservicios_cqrs": {"texto":"CQRS separa las operaciones de lectura y escritura.","fonetica":"seku.eˈɾes seˈpaɾa las opeɾaˈθjones de lekˈtuɾa i eskɾiˈtuɾa"},
    "microservicios_datos_particionados": {"texto":"Los datos pueden particionarse para mejorar el rendimiento.","fonetica":"los ˈðatos ˈpweðen paɾtisjoˈnaɾse ˈpaɾa mexoˈɾaɾ el ren.diˈmjento"},
    "microservicios_sharding": {"texto":"El sharding distribuye datos en diferentes nodos.","fonetica":"el ˈʃaɾdin distɾiˈβwe ˈðatos en difeˈɾentes ˈnoðos"},
    "microservicios_replica_datos": {"texto":"Las réplicas de datos aseguran disponibilidad.","fonetica":"las ˈreplikas de ˈðatos aseˈɣuɾan ði.sponiβiliˈðað"},
    "microservicios_cache": {"texto":"El uso de caché reduce la carga en las bases de datos.","fonetica":"el ˈuso de kaˈtʃe reˈðuθe la ˈkaɾɣa en las ˈbases de ˈðatos"},
    "microservicios_api_gateway1": {"texto":"El API Gateway centraliza las peticiones a los microservicios.","fonetica":"el api ˈɣatewei sentɾaliˈθa las petiˈθjones a los mikɾoseɾˈβisjos"},
    "microservicios_graphql": {"texto":"GraphQL permite consultas flexibles a múltiples servicios.","fonetica":"ˈɡɾaf.kjuˈel peɾˈmite konsulˈtas fleksiˈβles a ˈmultiples seɾˈβisjos"},
    "microservicios_rest": {"texto":"REST sigue siendo un estilo común de comunicación en microservicios.","fonetica":"rest ˈsiɣe ˈsjendo un esˈtilo koˈmun de komunikaˈθjon en mikɾoseɾˈβisjos"},
    "microservicios_grpc": {"texto":"gRPC ofrece comunicación eficiente y rápida entre servicios.","fonetica":"xe eɾepeˈse oˈfɾese komunikaˈθjon efiˈθjente i ˈrapiða ˈentɾe seɾˈβisjos"},
    "microservicios_event_bus": {"texto":"El bus de eventos facilita la integración entre servicios.","fonetica":"el bus de eˈβentos fasiˈlita la inteɣɾaˈθjon ˈentɾe seɾˈβisjos"},
    "microservicios_resiliencia1": {"texto":"La resiliencia implica recuperarse rápidamente de fallos.","fonetica":"la resiˈljensja imˈplika rekupeˈɾaɾse ˈrapiðamente de ˈfaʝos"},
    "microservicios_high_availability": {"texto":"La alta disponibilidad asegura que el sistema siempre esté accesible.","fonetica":"la ˈalta ðispo.niβiliˈðað aseˈɣuɾa ke el sisˈtema ˈsjempɾe esˈte akseˈsiβle"},
    "microservicios_latency": {"texto":"Reducir la latencia mejora la experiencia del usuario.","fonetica":"reðuˈθiɾ la laˈtensja meˈxoɾa la ekspeˈɾjensja del uˈswajɾjo"},
    "microservicios_rate_limit": {"texto":"El rate limiting controla el número de peticiones permitidas.","fonetica":"el ɾeit ˈlimitin konˈtɾola el ˈnumeɾo de petiˈθjones peɾmiˈtiðas"},
    "microservicios_backpressure": {"texto":"El backpressure regula el flujo de mensajes para evitar sobrecarga.","fonetica":"el bakˈpɾeʃuɾ reˈɣula el ˈfluxo de menˈsaxes ˈpaɾa eβiˈtaɾ soβɾeˈkaɾɣa"},
    "microservicios_throttling": {"texto":"El throttling limita el uso excesivo de los servicios.","fonetica":"el ˈθɾotl̪in liˈmita el ˈuso ekseˈsiβo de los seɾˈβisjos"},
    "microservicios_multicloud": {"texto":"Los microservicios pueden desplegarse en entornos multicloud.","fonetica":"los mikɾoseɾˈβisjos ˈpweðen des.pleˈɣaɾse en enˈtoɾnos multiklaujð"},
    "microservicios_hibrido": {"texto":"Los despliegues híbridos combinan nubes públicas y privadas.","fonetica":"los des.pleˈɣwes ˈiβɾiðos komˈbinan ˈnuβes ˈpuβlikas i pɾiˈβaðas"}
,    "microservicios_sagas": {"texto":"El patrón Sagas gestiona transacciones distribuidas en microservicios.","fonetica":"el paˈtɾon ˈsaɣas xesˈtjona tɾansakˈθjones distɾiˈβwiðas en mikɾoseɾˈβisjos"},
    "microservicios_choreography1": {"texto":"La coreografía en microservicios evita un orquestador central.","fonetica":"la koɾeoˈɣɾafia en mikɾoseɾˈβisjos eˈβita un oɾkestaˈðoɾ sentˈɾal"},
    "microservicios_orchestration_vs_choreography": {"texto":"La orquestación centralizada y la coreografía distribuida son enfoques distintos.","fonetica":"la oɾkestaˈθjon sentɾaliˈθaða i la koɾeoˈɣɾafia distɾiˈβwiða son enˈfo.kes ðisˈtintos"},
    "microservicios_transacciones_distribuidas": {"texto":"Las transacciones distribuidas requieren mecanismos especiales.","fonetica":"las tɾansakˈθjones distɾiˈβwiðas reˈkjeɾen mekaˈnismos espeθjaˈles"},
    "microservicios_idempotencia1": {"texto":"La idempotencia asegura que una operación repetida tenga el mismo efecto.","fonetica":"la idem.poˈtenθja aseˈɣuɾa ke ˈuna opeɾaˈθjon repeˈtiðað ˈteŋga el ˈmizmo eˈfekto"},
    "microservicios_consistencia_eventual1": {"texto":"La consistencia eventual es común en sistemas distribuidos.","fonetica":"la konsisˈtenθja eβenˈtwal es koˈmun en sisˈtemas distɾiˈβwiðos"},
    "microservicios_consistencia_fuerte": {"texto":"Algunos sistemas requieren consistencia fuerte entre servicios.","fonetica":"alˈɣunos sisˈtemas reˈkjeɾen konsisˈtenθja ˈfweɾte enˈtɾe seɾˈβisjos"},
    "microservicios_acid": {"texto":"Los microservicios suelen relajar las propiedades ACID tradicionales.","fonetica":"los mikɾoseɾˈβisjos ˈswelen relaˈxaɾ las pɾopjeðaðes aθid tɾadiθjoˈnales"},
    "microservicios_base": {"texto":"El principio BASE equilibra disponibilidad y consistencia eventual.","fonetica":"el pɾinˈθipjo ˈbase ekiˈliβɾa ðiθpo.niβiˈliðað i konsisˈtenθja eβenˈtwal"},
    "microservicios_cache1": {"texto":"El uso de cachés reduce la latencia en microservicios.","fonetica":"el ˈuso de kaˈʃes reˈðuθe la laˈtenθja en mikɾoseɾˈβisjos"},
    "microservicios_api_versionado": {"texto":"El versionado de APIs permite evolucionar sin romper clientes.","fonetica":"el βeɾsjoˈnaðo de ˈapis peɾˈmite eβoluθjoˈnaɾ sin ˈrompeɾ kljenˈtes"},
    "microservicios_backward_compatibility": {"texto":"La compatibilidad hacia atrás facilita migraciones suaves.","fonetica":"la kompa.tiβiliˈðað ˈasja aˈtɾas fasiˈlita miɣɾaˈθjones ˈswaβes"},
    "microservicios_documentacion_api": {"texto":"La documentación clara de APIs mejora la integración.","fonetica":"la dokumen.taˈθjon ˈklaɾa de ˈapis meˈxoɾa la inteɣɾaˈθjon"},
    "microservicios_openapi": {"texto":"OpenAPI es un estándar popular para describir servicios.","fonetica":"ˈopen api es un esˈtandaɾ popuˈlaɾ ˈpaɾa des.kɾiˈβiɾ seɾˈβisjos"},
    "microservicios_postman": {"texto":"Postman ayuda a probar y documentar microservicios.","fonetica":"ˈpostman aˈʝuða a pɾoˈβaɾ i dokumenˈtaɾ mikɾoseɾˈβisjos"},
    "microservicios_testing_end_to_end": {"texto":"Las pruebas end-to-end validan flujos completos en microservicios.","fonetica":"las ˈpɾweβas ent tu ent βaliˈðan ˈflu.xos komˈpletos en mikɾoseɾˈβisjos"},
    "microservicios_test_datos_mock": {"texto":"El uso de datos mock facilita pruebas aisladas.","fonetica":"el ˈuso de ˈðatos mok fasiˈlita ˈpɾweβas aisˈlaðas"},
    "microservicios_test_integration": {"texto":"Las pruebas de integración verifican la comunicación entre servicios.","fonetica":"las ˈpɾweβas de inteɣɾaˈθjon βeɾifiˈkan la komuni.kaˈθjon enˈtɾe seɾˈβisjos"},
    "microservicios_test_performance": {"texto":"Las pruebas de rendimiento aseguran la eficiencia del sistema.","fonetica":"las ˈpɾweβas de ren.diˈmjento aseˈɣuɾan la efiˈθjenθja del sisˈtema"},
    "microservicios_test_resiliencia": {"texto":"Las pruebas de resiliencia simulan fallos y recuperación.","fonetica":"las ˈpɾweβas de resiˈljensja simuˈlan ˈfaʝos i rekupɛɾaˈθjon"},
    "microservicios_observabilidad_alertas": {"texto":"Las alertas notifican anomalías detectadas en microservicios.","fonetica":"las aˈleɾtas notifiˈkan anomaˈlias detekˈtaðas en mikɾoseɾˈβisjos"},
    "microservicios_dashboard": {"texto":"Los dashboards muestran métricas clave en tiempo real.","fonetica":"los ˈdaʃboɾds ˈmwestɾan ˈmetɾikas ˈklaβe en ˈtjempo reˈal"},
    "microservicios_gestion_incidentes": {"texto":"La gestión de incidentes es vital en operaciones de microservicios.","fonetica":"la xesˈtjon de inθiˈðentes es βiˈtal en opeɾaˈθjones de mikɾoseɾˈβisjos"},
    "microservicios_costos": {"texto":"La arquitectura de microservicios puede aumentar los costos operativos.","fonetica":"la aɾki.teɾˈtuɾa de mikɾoseɾˈβisjos ˈpweðe awmenˈtaɾ los ˈkostos opeɾaˈtiβos"},
    "microservicios_complejidad_gestion": {"texto":"La gestión de muchos microservicios incrementa la complejidad.","fonetica":"la xesˈtjon de ˈmu.tʃos mikɾoseɾˈβisjos inkɾemenˈta la komplɛxiˈðað"},
    "microservicios_equipo_multidisciplinario": {"texto":"Los equipos multidisciplinarios favorecen el éxito en microservicios.","fonetica":"los eˈkipos multiðisiplinaˈɾjos faβoˈɾeθen el ˈek.sito en mikɾoseɾˈβisjos"},
    "microservicios_cultura_colaboracion": {"texto":"La colaboración entre equipos es clave para microservicios.","fonetica":"la kollaβoɾaˈθjon enˈtɾe eˈkipos es ˈklaβe ˈpaɾa mikɾoseɾˈβisjos"},
    "microservicios_automatizacion": {"texto":"La automatización reduce errores humanos en despliegues.","fonetica":"la auto.ma.tiθaˈθjon reˈðuθe eˈrores uˈmanos en des.pleˈɣwes"},
    "microservicios_infraestructura_como_codigo": {"texto":"La infraestructura como código agiliza la gestión de recursos.","fonetica":"la infɾaestɾukˈtuɾa ˈkomo ˈkoðiɣo axiˈlisa la xesˈtjon de reˈkuɾsos"}
  }
  